---
- name: check peco exists
  stat:
    path: "{{gopath}}/bin/peco"
  register: have_peco
  tags: [config-install,pet,peco]

- name: install peco sources
  command: go get -d github.com/peco/peco
  when: not have_peco.stat.exists
  tags: [config-install,pet,peco]

- name: install peco deps
  command: glide install
  args:
    chdir: "{{gopath}}/src/github.com/peco/peco"
  environment:
    GOPATH: "{{gopath}}"
  when: not have_peco.stat.exists
  tags: [config-install,pet,peco]

- name: compile peco
  command: go build cmd/peco/peco.go
  args:
    chdir: "{{gopath}}/src/github.com/peco/peco"
    creates: "{{gopath}}/src/github.com/peco/peco/peco"
  environment:
    GOPATH: "{{gopath}}"
  when: not have_peco.stat.exists
  tags: [config-install,pet,peco]

- name: install peco
  command: install "peco" "{{gopath}}/bin"
  args:
    chdir: "{{gopath}}/src/github.com/peco/peco"
    creates: "{{gopath}}/bin/peco"
  when: not have_peco.stat.exists
  tags: [config-install,pet,peco]

- name: install pet
  command: go get github.com/knqyf263/pet
  tags: [config-install,pet]

- name: create pet config directory
  file:
    path: "{{homedir}}/.config/pet"
    state: directory
  tags: [config-install,pet]

- name: configure
  template:
    dest: "{{homedir}}/.config/pet/config.toml"
    src: config.toml
    mode: "0600"
  tags: [config-install,pet]

- name: check snippet.toml
  stat:
    path: "{{homedir}}/.config/pet/snippet.toml"
  register: have_pet_snippet
  tags: [config-install,pet]

- name: sync
  command: pet sync
  when: not have_pet_snippet.stat.exists
  tags: [config-install,pet]

- name: install zsh binding
  copy:
    dest: "{{profiledir}}/50-pet.zsh"
    src: pet.zsh
  tags: [config-install,pet]
