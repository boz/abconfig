---
- name: install go (pacman)
  pacman:
    name:
      - go
      - go-tools
      - musl
  become: true
  when: ansible_pkg_mgr == "pacman"
  tags: [config-install,go]

- name: install gophers/archive ppa(apt)
  apt_repository:
    repo: ppa:gophers/archive
  become: true
  when: ansible_pkg_mgr == "apt"
  tags: [config-install,go]

- name: install go package (apt)
  apt:
    name:
      - golang-1.8
  become: true
  when: ansible_pkg_mgr == "apt"
  tags: [config-install,go]

- name: enable go version (apt)
  file:
    src: /usr/lib/go-1.8
    dest: /usr/lib/go
    state: link
    force: yes
  become: true
  when: ansible_pkg_mgr == "apt"
  tags: [config-install,go]

- name: install go binaries (apt)
  file:
    src: /usr/lib/go/bin/{{item}}
    dest: /usr/bin/{{item}}
    state: link
    force: yes
  with_items: [ gofmt, go ]
  become: true
  when: ansible_pkg_mgr == "apt"
  tags: [config-install,go]

- name: install go (osx)
  homebrew:
    name: go
  when: ansible_pkg_mgr == "homebrew"
  tags: [config-install,go]

- name: create gopath
  file: path={{gopath}} state=directory
  tags: [config-install,go]

- name: configure shell $GOPATH
  template: dest={{ profiledir }}/10-gopath.sh
            src=gopath.sh
  tags: [config,go]

# - name: install glide
#   command: go get -u github.com/Masterminds/glide
#   environment:
#     GOPATH: "{{gopath}}"
#   args:
#     creates: "{{gopath}}/bin/glide"
#   tags: [config-install,go,glide]

# - name: install govendor
#   command: go get -u github.com/kardianos/govendor
#   environment:
#     GOPATH: "{{gopath}}"
#   args:
#     creates: "{{gopath}}/bin/govendor"
#   tags: [config-install,go,govendor]

- name: install delve
  command: go get -u github.com/derekparker/delve/cmd/dlv
  args:
    creates: "{{gopath}}/bin/dlv"
  environment:
    GOPATH: "{{gopath}}"
  tags: [config-install,go,delve]

# - name: install goreleaser
#   command: go get -u github.com/goreleaser/goreleaser
#   args:
#     creates: "{{gopath}}/bin/goreleaser"
#   environment:
#     GOPATH: "{{gopath}}"
#   tags: [config-install,go,goreleaser]

# - name: install godownloader
#   command: go get -u github.com/goreleaser/godownloader
#   args:
#     creates: "{{gopath}}/bin/godownloader"
#   environment:
#     GOPATH: "{{gopath}}"
#   tags: [config-install,go,godownloader]

# - name: install dep
#   homebrew:
#     name: dep
#   when: ansible_pkg_mgr == "homebrew"
#   tags: [config-install,go,dep]

# - name: install protobuf
#   pacman:
#     name: protobuf
#   become: true
#   when: ansible_pkg_mgr == "pacman"
#   tags: [config-install,go,protobuf]
