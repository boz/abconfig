---

- name: remove old minikube
  shell: |
    delta="$({{homedir}}/bin/minikube update-check | awk '{print $2}' | uniq | wc -l)"
    if [ "$delta" != "1" ]; then
      mv -f "{{homedir}}/bin/minikube" "{{homedir}}/bin/minikube.old"
    fi
  args:
    removes: "{{homedir}}/bin/minikube"
  tags: [k8s-minikube,minikube]

- name: download minikube (linux)
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    dest: "{{homedir}}/bin/minikube"
    mode: "0755"
  when: ansible_system == "Linux"
  tags: [k8s-minikube,minikube]

- name: download minikube (osx)
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64
    dest: "{{homedir}}/bin/minikube"
    mode: "0755"
  when: ansible_system == "Darwin"
  tags: [k8s-minikube,minikube]

- name: fetch current kubectl version
  uri:
    url: https://storage.googleapis.com/kubernetes-release/release/stable.txt
    return_content: yes
  register: kubectl_version
  tags: [k8s-minikube,kubectl]

- name: remove old kubectl
  shell: |
    current=$({{homedir}}/bin/kubectl version --client --short | awk '{print $3}')
    if [ "$current" != "{{kubectl_version['content'] | trim}}" ]; then
      mv -f "{{homedir}}/bin/kubectl" "{{homedir}}/bin/kubectl.$current"
    fi
  args:
    removes: "{{homedir}}/bin/kubectl"
  tags: [k8s-minikube,kubectl]

- name: download kubectl (linux)
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{kubectl_version['content'] | trim}}/bin/linux/amd64/kubectl
    dest: "{{homedir}}/bin/kubectl"
    mode: "0755"
  when: ansible_system == "Linux"
  tags: [k8s-minikube,kubectl]

- name: download kubectl (osx)
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{kubectl_version['content'] | trim}}/bin/darwin/amd64/kubectl
    dest: "{{homedir}}/bin/kubectl"
    mode: "0755"
  when: ansible_system == "Darwin"
  tags: [k8s-minikube,kubectl]

- name: add kubectl completion
  copy:
    dest: "{{profiledir}}/20-kubectl.zsh"
    content: |
      eval "$(kubectl completion zsh)"
  tags: [k8s-minikube,kubectl]

- name: install helm (osx)
  homebrew:
    name: kubernetes-helm
  when: ansible_pkg_mgr == "homebrew"
  tags: [k8s-minikube,helm]

- name: install helm (arch)
  pacaur:
    name: kubernetes-helm
  when: ansible_pkg_mgr == "pacman"
  tags: [k8s-minikube,helm]
